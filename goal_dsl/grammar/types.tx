import utils


Time:
    hour=INT ':' minute=INT (':' second=INT)?
;

Date: month=INT ':' day=INT ':' year=INT;

// Hours: /[0-2]?[0-9]?/;
// Minutes: /[0-5][0-9]/;

List:
    '[' items*=ListItem[','] ']'
;

ListItem:
    NUMBER | STRING | BOOL | List | Dict | OBJECT
;

Dict:
    '{' items*=DictItem[','] '}'
;

DictItem:
    name=STRING ':' value=DictType
;

DictType:
    NUMBER | STRING | BOOL | Dict | List | OBJECT
;

NID: /(.*?)\n/;

Description: /\#(.*?)$/;

Point: Point2D | Point3D;
Orientation: Orientation2D | Orientation3D;

Point2D:
    'Point2D' '(' x=NUMBER ',' y=NUMBER ')'
;

Point3D:
    'Point3D' '(' x=NUMBER ',' y=NUMBER ',' z=NUMBER ')'
;

Orientation2D:
    'Orientation2D' '(' z=NUMBER ')'
;

Orientation3D:
    'Orientation3D' '(' x=NUMBER ',' y=NUMBER ',' z=NUMBER ')'
;

DataType: PrimitiveDataType | CustomDataType | Enumeration;

CustomDataType:
    'DataType' name=ID
        (description=Description)?
        properties*=Property  // Each Message has one or more properties.
    'end'
;

Enumeration:
    'Enum' name=ID
        (description=Description)?
        elements+=EnumerationElement
    'end'
;

EnumerationElement: name=STRING;

// Primitive data types
PrimitiveDataType: 'type' name=ID;

Property: ListProperty | SimpleProperty;

SimpleProperty: name=ID ':' type=[DataType:FQN|+m:types] ('=' default=STRING)?;

ListProperty: name=ID ':' type=[DataType:FQN|+m:types]'[]' ('=' default=STRING)?;
