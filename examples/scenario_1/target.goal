Broker<MQTT> MyMQTTBroker:
    host: 'localhost'
    port: 1883
    auth: AuthPlain('', '')


Entity TemperatureSensorList:
    topic: 'garden.temperature'
    broker: MyMQTTBroker
    attributes:
        - regionA: float
        - regionB: float
        - regionC: float
        - regionD: float

Entity HumiditySensorList:
    topic: 'garden.humidity'
    broker: MyMQTTBroker
    attributes:
        - regionA: float
        - regionB: float
        - regionC: float
        - regionD: float


Entity AirQualitySensorList:
    topic: 'garden.air_quality'
    broker: MyMQTTBroker
    attributes:
        - regionA: float
        - regionB: float
        - regionC: float
        - regionD: float

Entity WindowRegionA:
    topic: 'garden.regionA.window'
    broker: MyMQTTBroker
    attributes:
        - state: bool

Entity WindowRegionB:
    topic: 'garden.regionB.window'
    broker: MyMQTTBroker
    attributes:
        - state: bool

Entity WindowRegionC:
    topic: 'garden.regionC.window'
    broker: MyMQTTBroker
    attributes:
        - state: bool

Entity WindowRegionD:
    topic: 'garden.regionD.window'
    broker: MyMQTTBroker
    attributes:
        - state: bool

// ------------------ GOAL Definitions -----------------
Goal<EntityStateCondition> Goal_1:
    condition: (TemperatureSensorList.regionA > 30) OR (HumiditySensorList.regionA > 0.8)

Goal<EntityStateCondition> Goal_2:
    condition: WindowRegionA.state == 1

Goal<EntityStateCondition> Goal_3:
    condition: (TemperatureSensorList.regionA < 20) AND (HumiditySensorList.regionA < 0.8)
    timeConstraints: [FROM_GOAL_START(<1800)]

Goal<EntityStateCondition> Goal_4:
    condition: WindowRegionA.state == 0

Goal<Complex> CG1:
    goals: [Goal_1, Goal_2, Goal_3, Goal_4]
    strategy: ALL_ACCOMPLISHED_ORDERED

Goal<EntityStateCondition> Goal_5:
    condition: ((AirQualitySensorList.regionA < 0.5) OR
        (AirQualitySensorList.regionB < 0.5)) OR ((AirQualitySensorList.regionC
            < 0.5) OR (AirQualitySensorList.regionD < 0.5))

Goal<EntityStateCondition> Goal_6:
    condition: ((WindowRegionA.state == 1) AND (WindowRegionB.state == 1)) AND
((WindowRegionC.state == 1) AND (WindowRegionD.state == 1))

Goal<EntityStateCondition> Goal_7:
    condition: ((AirQualitySensorList.regionA > 0.8) AND
        (AirQualitySensorList.regionB > 0.8)) AND ((AirQualitySensorList.regionC
            > 0.8) AND (AirQualitySensorList.regionD > 0.8))

Goal<EntityStateCondition> Goal_8:
    condition: ((WindowRegionA.state == 0) AND (WindowRegionB.state == 0)) AND ((WindowRegionC.state == 0) AND (WindowRegionD.state == 0))

Goal<Complex> CG2:
    goals: [Goal_5, Goal_6, Goal_7, Goal_8]
    strategy: ALL_ACCOMPLISHED_ORDERED

Target ScenarioATarget:
    goals: [CG1, CG2]
    concurrent: True
